from typing import Callable
import matplotlib.pyplot as plt
import numpy as np
import math

def poisson_random_variable(lambda_param):
    """
    Generate a Poisson random variable with parameter lambda_param.
    """
    L = math.exp(-lambda_param)
    k = 0
    p = 1
    while p > L:
        k = k + 1
        u = np.random.uniform(0, 1)
        p = p * u
    return k - 1


def visualize_random_variable(random_variable_generator:Callable, ground_truth_generator:Callable=None, num_samples:int=10000):
    """
    Visualize a random variable generated by the given random_variable_generator function and optionally compare it
    with the ground truth generated by the ground_truth_generator function.
    
    Parameters:
        random_variable_generator (function): Function to generate random variables.
        ground_truth_generator (function): Optional. Function to generate ground truth random variables for comparison.
        num_samples (int): Number of samples to generate for visualization (default is 1000).
    """
    # Generate random variables
    random_values = [random_variable_generator() for _ in range(num_samples)]
    
    # Plot histogram for random variable generator
    plt.hist(random_values, bins=20, density=True, alpha=0.6, color='g', label='Generated')
    
    if ground_truth_generator:
        # Generate ground truth random variables
        gt_values = [ground_truth_generator() for _ in range(num_samples)]
        
        # Plot histogram for ground truth generator
        plt.hist(gt_values, bins=20, density=True, alpha=0.6, color='b', label='Ground Truth')
        
        plt.legend()
    
    plt.title('Random Variable Visualization')
    plt.xlabel('Value')
    plt.ylabel('Frequency')
    plt.grid(True)
    plt.show()


if __name__ == "__main__":
    visualize_random_variable(lambda: poisson_random_variable(5), lambda: np.random.poisson(5))